// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using survey_backend.data.Concrete.EfCore;

#nullable disable

namespace survey_backend.data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240222003601_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("survey_backend.entity.AnswerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.ToTable("AnswerTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Çoktan Tekli Seçmeli"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Çoktan Çoklu Seçmeli"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Yazarak Yanıt Verilen"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Listeden Tek Seçilen"
                        });
                });

            modelBuilder.Entity("survey_backend.entity.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionId = 1,
                            Text = "Evet"
                        },
                        new
                        {
                            Id = 2,
                            QuestionId = 1,
                            Text = "Hayır"
                        },
                        new
                        {
                            Id = 3,
                            QuestionId = 2,
                            Text = "Kadın"
                        },
                        new
                        {
                            Id = 4,
                            QuestionId = 2,
                            Text = "Erkek"
                        },
                        new
                        {
                            Id = 5,
                            QuestionId = 3,
                            Text = "Vahşi Batı"
                        },
                        new
                        {
                            Id = 6,
                            QuestionId = 3,
                            Text = "Bilim Kurgu"
                        },
                        new
                        {
                            Id = 7,
                            QuestionId = 3,
                            Text = "Komedi"
                        },
                        new
                        {
                            Id = 8,
                            QuestionId = 4,
                            Text = "Kedi"
                        },
                        new
                        {
                            Id = 9,
                            QuestionId = 4,
                            Text = "Köpek"
                        },
                        new
                        {
                            Id = 10,
                            QuestionId = 4,
                            Text = "Kuş"
                        },
                        new
                        {
                            Id = 11,
                            QuestionId = 8,
                            Text = "Ankara"
                        },
                        new
                        {
                            Id = 12,
                            QuestionId = 8,
                            Text = "İstanbul"
                        },
                        new
                        {
                            Id = 13,
                            QuestionId = 8,
                            Text = "İzmir"
                        });
                });

            modelBuilder.Entity("survey_backend.entity.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Su Bilgi Teknolojileri"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Onr Bilgi Teknolojileri"
                        });
                });

            modelBuilder.Entity("survey_backend.entity.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnswerTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AnswerTypeId");

                    b.HasIndex("SurveyId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerTypeId = 1,
                            IsMandatory = true,
                            SurveyId = 1,
                            Text = "Çalıştığınız İşten Memnun musunuz?"
                        },
                        new
                        {
                            Id = 2,
                            AnswerTypeId = 1,
                            IsMandatory = false,
                            SurveyId = 1,
                            Text = "Cinsiyetiniz"
                        },
                        new
                        {
                            Id = 3,
                            AnswerTypeId = 2,
                            IsMandatory = true,
                            SurveyId = 1,
                            Text = "Sevdiğiniz Film Türleri"
                        },
                        new
                        {
                            Id = 4,
                            AnswerTypeId = 2,
                            IsMandatory = false,
                            SurveyId = 1,
                            Text = "Sahip Olduğunuz Hayvanlar"
                        },
                        new
                        {
                            Id = 5,
                            AnswerTypeId = 3,
                            IsMandatory = true,
                            SurveyId = 2,
                            Text = "Yaşınız"
                        },
                        new
                        {
                            Id = 6,
                            AnswerTypeId = 3,
                            IsMandatory = false,
                            SurveyId = 2,
                            Text = "Bize İletmek İstediğiniz Mesaj"
                        },
                        new
                        {
                            Id = 7,
                            AnswerTypeId = 3,
                            IsMandatory = true,
                            SurveyId = 2,
                            Text = "Doğum Tarihi"
                        },
                        new
                        {
                            Id = 8,
                            AnswerTypeId = 4,
                            IsMandatory = true,
                            SurveyId = 2,
                            Text = "Yaşadığınız Şehir"
                        });
                });

            modelBuilder.Entity("survey_backend.entity.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Surveys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2024, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            OrganizationId = 1,
                            StartDate = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Genel Anket 1"
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2024, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            OrganizationId = 2,
                            StartDate = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Genel Anket 2"
                        });
                });

            modelBuilder.Entity("survey_backend.entity.Option", b =>
                {
                    b.HasOne("survey_backend.entity.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("survey_backend.entity.Question", b =>
                {
                    b.HasOne("survey_backend.entity.AnswerType", "AnswerType")
                        .WithMany()
                        .HasForeignKey("AnswerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("survey_backend.entity.Survey", "Survey")
                        .WithMany()
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnswerType");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("survey_backend.entity.Survey", b =>
                {
                    b.HasOne("survey_backend.entity.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("survey_backend.entity.Question", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
